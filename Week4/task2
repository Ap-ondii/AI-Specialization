import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, f1_score, classification_report
from sklearn.preprocessing import LabelEncoder

# Load dataset
df = pd.read_csv('breast-cancer.csv')  # Rename as needed
df.head()

# Simulate issue priority from diagnosis
# B = Benign (Low), M = Malignant (High)
df['priority'] = df['diagnosis'].map({'B': 'Low', 'M': 'High'})

# Drop irrelevant or identifier columns
df.drop(['id', 'Unnamed: 32', 'diagnosis'], axis=1, inplace=True, errors='ignore')

# Encode priority levels
le = LabelEncoder()
df['priority_encoded'] = le.fit_transform(df['priority'])

# Split features and label
X = df.drop(['priority', 'priority_encoded'], axis=1)
y = df['priority_encoded']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_pred))
print("F1-Score:", f1_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

